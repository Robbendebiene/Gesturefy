@font-face {
  font-weight: normal;
  font-style: normal;
  font-family: "Icons";
  src: url("/res/fonts/icons.woff");
}

@font-face {
  font-weight: normal;
  font-style: normal;
  font-family: "NunitoSans Regular";
  src: url("/res/fonts/NunitoSans-Regular.woff");
}

@font-face {
  font-weight: normal;
  font-style: normal;
  font-family: "firefox-gesture-arrows";
  src: url("/res/fonts/arrows.woff");
}

* {
  margin: 0;
  padding: 0;
  outline: none;
  border: none;
}

html {
  color: var(--text-color);
  font-size: 16px;
  font-family: "NunitoSans Regular", "Arial", sans-serif;
}

input,
select,
button,
textarea {
  color: var(--text-color);
  font-size: 1rem;
  font-family: inherit;
}

a {
  color: var(--highlighted-color);
  text-decoration: none;
  cursor: pointer;
}

a:hover,
a:focus {
  text-decoration: underline;
}

em {
  color: var(--highlighted-color);
  text-decoration: underline;
  font-style: normal;
}

hr {
  margin: 20px 0;
  border-bottom: 1px solid var(--borderSecond-color);
}

:-moz-focusring {
  outline: none;
}

/**
 * Icons classes
 **/

.icon-gear:after {
  content: "g";
  font-family: Icons;
}

.icon-arrows:after {
  content: "a";
  font-family: Icons;
}

.icon-star:after {
  content: "s";
  font-family: Icons;
}

.icon-list:after {
  content: "l";
  font-family: Icons;
}

.icon-info:after {
  content: "i";
  font-family: Icons;
}

.icon-arrow-up:after {
  content: "U";
  font-family: Icons;
}

.icon-arrow-right:after {
  content: "R";
  font-family: Icons;
}

.icon-arrow-down:after {
  content: "D";
  font-family: Icons;
}

.icon-arrow-left:after {
  content: "L";
  font-family: Icons;
}

.icon-delete:after {
  content: "X";
  font-family: Icons;
}


.icon-add:after {
  content: "+";
  font-family: Icons;
}

/**
* Commons classes
**/

.small-spacing {
  margin-bottom: 10px;
}

.medium-spacing {
  margin-bottom: 20px;
}

.align-content-right {
  display: flex;
  justify-content: flex-end;
}

.justify-text {
  text-align: justify;
}

.small-text {
  font-size: 14px;
}

/**
 * Option list layout
 **/



.ol-section + .ol-section {
  margin-top: 20px;
  padding-top: 20px;
  border-top: 1px solid var(--borderSecond-color);
}

.ol-item {
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
}

.ol-item:not(:first-child) {
  margin-top: 10px;
}

.ol-collapsible .ol-item {
  margin-top: 10px;
}

.ol-collapsible {
  position: relative;
  overflow: hidden;
}

.ol-collapsible:after {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50px;
  visibility: hidden;
  opacity: 0;
  background: linear-gradient(to bottom, transparent 0%, var(--baseSecond-color) 100%);
  content: "";
  transition: visibility .3s, opacity .3s;
}

.ol-collapsible.animate {
  transition: height .5s;
}

/* gradient fade in/out */
.ol-collapsible.animate:after {
  visibility: visible;
  opacity: 1;
}

.ol-label {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-basis: 0;
  flex-direction: column;
  flex-grow: 1;
  cursor: default;
}

.ol-input {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-basis: 170px;
}

.ol-description {
  opacity: .5;
  font-size: 14px;
  transition: opacity .3s;
}

.ol-item:hover .ol-description {
  opacity: 1;
}

/**
 * Toggle button layout
 **/

.toggle-button {
  display: none;
}

.toggle-button + label {
  width: 45px;
  padding: 8px 0 6px 0;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background: var(--base-color);
  color: var(--textThird-color);
  text-align: center;
  transition: background .5s;
}

.toggle-button + label:after {
  content: "__MSG_toggleButtonOff__";
}

.toggle-button:checked + label:after {
  content: "__MSG_toggleButtonOn__";
}

.toggle-button:checked + label {
  border-color: var(--highlighted-color);
  background: var(--highlighted-color);
  color: var(--textSecond-color);
}

/**
 * Input field layout
 **/

.input-field {
  width: 140px;
  box-sizing: border-box;
  padding: 5px;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background: var(--base-color);
  color: var(--textThird-color);
  text-align: center;
  text-overflow: ellipsis ellipsis;
  /*transition: color 0.3s;*/
  -moz-appearance: textfield;
}

.input-field:invalid,
.text-field:invalid {
  border-color: var(--warning-color);
  box-shadow: none;
  color: var(--warning-color);
}

/**
 * Color field layout
 **/

.color-select-field {
  width: 47px;
  height: 36px;
  padding: 5px;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background: var(--base-color);
  text-align: center;
  cursor: pointer;
}

/**
 * Select field layout
 **/

.select-wrapper {
  position: relative;
}

.select-wrapper:after {
  position: absolute;
  top: 50%;
  right: 9px;
  color: var(--textThird-color);
  content: "D";
  font-size: 11px;
  font-family: Icons;
  transform: translateY(-50%);
  pointer-events: none;
}

.select-field {
  width: 140px;
  box-sizing: border-box;
  padding: 4px 25px 4px 5px;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background-color: var(--base-color);
  color: var(--textThird-color);
  text-align: center;
  text-overflow: ellipsis;
  -moz-appearance: none;
       appearance: none;
}

/**
 * Text field layout
 **/

.text-field {
  box-sizing: border-box;
  padding: 5px;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background: var(--base-color);
  color: var(--textThird-color);
  font-family: "NunitoSans Regular", "Arial", sans-serif;
  resize: vertical;
}

/**
 * Regular button layout
 **/

.button {
  min-width: 142px;
  box-sizing: border-box;
  padding: 8px 6px 6px 6px;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background: var(--base-color);
  color: var(--textThird-color);
  text-align: center;
  cursor: pointer;
}

label.button > span {
  color: inherit;
}

.button + .button {
  margin-left: 15px;
}

.button:hover {
  box-shadow: 0 0 10px -4px var(--shadow-color);
  text-decoration: none;
}

.button.danger:hover *,
.button.danger:hover {
  border-color: var(--warning-color);
  background-color: var(--warning-color);
  color: var(--textSecond-color);
}

/**
 * Collapse button layout
 **/

.collapseButton {
  display: none;
}

.collapseButton + label {
  color: var(--highlighted-color);
}

.collapseButton + label:after {
  display: inline-block;
  margin-left: 5px;
  content: "D";
  font-size: 11px;
  font-family: Icons;
  transition: transform .3s;
}

.collapseButton:checked + label:after {
  transform: rotate(-180deg);
}

/**
 * Command select field layout
 **/

.command-select-field {
  position: relative;
  width: 140px;
  overflow: hidden;
  box-sizing: border-box;
  padding: 5px 28px 5px 10px;
  border: 1px solid var(--border-color);
  border-radius: 2px;
  background-color: var(--base-color);
  color: var(--textThird-color);
  text-align: center;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
}

.command-select-field:before {
  content: attr(title);
}

.command-select-field:after {
  position: absolute;
  top: 50%;
  right: 7px;
  content: "c";
  font-size: 11px;
  font-family: Icons;
  transform: translateY(-50%);
}

.command-select-field:hover:after {
  color: var(--highlighted-color);
}

.pop-out-animation {
  animation-name: PopOut;
  animation-duration: .2s;
  animation-timing-function: ease;
}

@keyframes PopOut {
  from {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  to {
    transform: scale(1);
  }
}

/**
 * Horizontal list layout
 **/

.horizontal-list {
  display: flex;
  align-items: baseline;
  flex-direction: row;
  padding: 5px 0;
  list-style: none;
}

.horizontal-list > li:not(:last-child):after {
  padding: 0 10px;
  color: var(--border-color);
  content: "\25CF";
}

/**
 * Gesture list layout
 **/



.gl-add-button {
  display: block;
  box-sizing: border-box;
  margin: 0 auto 15px auto;
  padding: 12px 13px;
  border-color: var(--highlighted-color);
  border-radius: 50%;
  background: var(--highlighted-color);
  color: var(--textSecond-color);
  text-align: center;
  line-height: 100%;
  cursor: pointer;
  transition: box-shadow .3s;
}

.gl-add-button:hover {
  box-shadow: 0 0 10px -4px var(--shadowSecond-color);
}

.gl-item {
  display: flex;
  position: relative;
  min-width: 0;
  flex-direction: row;
  flex-wrap: wrap;
  border: solid 1px var(--border-color);
  border-radius: 2px;
  background-color: var(--base-color);
  box-shadow: none;
  color: var(--textThird-color);
  list-style: none;
  cursor: pointer;
  transition: box-shadow .3s;
}

.gl-item:not(:last-child) {
  margin-bottom: 20px;
}

.gl-item:hover {
  box-shadow: 0 0 10px -4px var(--shadow-color);
}

.gl-item-animate-add {
  z-index: -1;
  animation-name: animateAddItem;
  animation-duration: .3s;
  animation-timing-function: ease;
}

@keyframes animateAddItem {
  from {
    opacity: 0;
    transform: scale(.5);
  }
  60% {
    opacity: 1;
    transform: scale(1.05);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.gl-item-animate-update {
  animation-name: animateUpdateItem;
  animation-duration: .2s;
  animation-timing-function: ease;
}

@keyframes animateUpdateItem {
  from {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  to {
    transform: scale(1);
  }
}

.gl-command {
  position: relative;
  flex-grow: 1;
  padding: 15px 15px 10px 15px;
  color: inherit;
}

/* hidden separator line which is only visible if one of the flex items wraps */
.gl-command::after {
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 100%;
  border-bottom: solid 1px var(--border-color);
  content: "";
}

.gl-gesture {
  padding: 15px 15px 10px 15px;
  color: inherit;
  text-align: left;
  text-transform: uppercase;
  word-break: break-all;
  letter-spacing: 5px;
  font-size: 14px;
  font-family: "firefox-gesture-arrows";
}

.gl-remove-button {
  position: absolute;
  top: 0;
  right: 0;
  width: 18px;
  height: 18px;
  opacity: 0;
  border-radius: 50%;
  background: var(--warning-color);
  color: var(--base-color);
  text-align: center;
  font-size: 6px;
  font-family: Icons;
  line-height: 6px;
  transition: opacity .3s, transform .3s;
  transform: translate(50%, -50%) scale(.7);
}

.gl-item:hover > .gl-remove-button {
  opacity: 1;
  transition-delay: .1s;
  transform: translate(50%, -50%) scale(1);
}

/**
 * Blacklist layout
 **/

.bl-form {
  display: flex;
  align-items: stretch;
}

.bl-url-pattern-input {
  flex: 1;
  box-sizing: border-box;
  padding: 8px 10px 6px 10px;
  border: 1px solid var(--border-color);
  border-right: none;
  border-radius: 2px 0 0 2px;
  background: var(--base-color);
  color: var(--textThird-color);
  text-overflow: ellipsis ellipsis;
}

.bl-url-pattern-input:invalid {
  box-shadow: none;
}

.bl-add-button {
  padding: 0 20px;
  border-radius: 0 2px 2px 0;
  background: var(--highlighted-color);
  color: var(--textSecond-color);
  text-align: center;
  font-size: 12px;
  line-height: 100%;
}

.blacklist {
  padding-top: 20px;
}

.blacklist::after {
  display: block;
  visibility: hidden;
  opacity: 0;
  color: var(--text-color);
  content: "__MSG_blacklistHintNoEntries__";
  text-align: center;
  font-size: 18px;
}

.blacklist:empty::after {
  visibility: visible;
  opacity: .5;
  transition: opacity .3s;
}

.bl-entry {
  display: flex;
  align-items: center;
  box-sizing: border-box;
  padding: 0 17px 10px 10px;
  cursor: default;
}

.bl-entry:not(:last-child) {
  margin-bottom: 10px;
  border-bottom: 1px dashed var(--borderSecond-color);
}

.bl-url-pattern {
  flex: 1;
  padding-right: 10px;
  word-break: break-all;
}

.bl-remove-button {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background-color: var(--border-color);
  color: var(--base-color);
  text-align: center;
  font-size: 6px;
  font-family: Icons;
  line-height: 6px;
}

.bl-remove-button:hover {
  background-color: var(--warning-color);
}

.bl-entry-animate-add {
  z-index: -1;
  animation-name: animateAddEntry;
  animation-duration: .3s;
  animation-timing-function: ease;
}

.bl-entry-animate-remove {
  animation-name: animateDeleteEntry;
  animation-duration: .3s;
  animation-timing-function: ease;
}

@keyframes animateDeleteEntry {
  from {
    opacity: 1;
    transform: scale(1);
  }
  30% {
    visibility: hidden;
    opacity: 0;
    transform: scale(.9);
  }
  to {
    visibility: hidden;
    opacity: 0;
    transform: scale(.9);
  }
}

@keyframes animateAddEntry {
  from {
    opacity: 0;
  }
  50% {
    opacity: .3;
  }
  to {
    opacity: 1;
  }
}
